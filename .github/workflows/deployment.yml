name: Deployment

on:
  push:
  workflow_dispatch:
    branches:
      - main

env:
  VITE_API_URL: ${{ secrets.VITE_API_URL }}

jobs:
  lint:
    strategy:
      matrix:
        operating-system: [ubuntu-latest]
    runs-on: ${{ matrix.operating-system }}
    environment: main
    steps:
      - name: Get Code
        uses: actions/checkout@v4
      - name: Cache Dependencies
        id: cache-node-modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install Dependencies
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: npm ci
      - name: Run Lint
        run: npm run lint
  test:
    strategy:
      matrix:
        operating-system: [ubuntu-latest]
    runs-on: ${{ matrix.operating-system }}
    environment: main
    steps:
      - name: Get Code
        uses: actions/checkout@v4
      - name: Cache Dependencies
        id: cache-node-modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install Dependencies
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: npm ci
      - name: Run Test
        run: npm run test
  build:
    strategy:
      matrix:
        operating-system: [ubuntu-latest]
    runs-on: ${{ matrix.operating-system }}
    environment: main
    needs: [lint, test]
    steps:
      - name: Get Code
        uses: actions/checkout@v4
      - name: Cache Dependencies
        id: cache-node-modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install Dependencies
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: npm ci
      - name: Build
        run: npm run build
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist
  deploy:
    strategy:
      matrix:
        operating-system: [ubuntu-latest]
    runs-on: ${{ matrix.operating-system }}
    environment: main
    needs: build
    steps:
      - name: Get Artifact
        uses: actions/download-artifact@v4
        with:
          name: dist
      - name: Output Content
        run: ls
      - name: Output API URL
        run: echo "${{ env.VITE_API_URL }}"
      - name: Deploy
        run: echo "Deploying..."
